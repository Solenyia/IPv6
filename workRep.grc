options:
  parameters:
    author: Hvozda Martin
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: FirstFlowGraph
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Starting point of semestral
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 20.0]
    rotation: 0
    state: enabled

blocks:
- name: delay
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: manual delay
    min_len: '1000'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '500'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1064, 36.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 36.0]
    rotation: 0
    state: enabled
- name: analog_random_source_x_0
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: '256'
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '2000'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 220.0]
    rotation: 0
    state: true
- name: blocks_char_to_float_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 204.0]
    rotation: 0
    state: true
- name: blocks_char_to_float_1
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 300.0]
    rotation: 0
    state: true
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: delay
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 288.0]
    rotation: 0
    state: true
- name: blocks_delay_1
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 192.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 228.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      import pmt\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded\
      \ Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Custom Difference Block',   # so we may modify\
      \ it if needed\n            in_sig=[np.float32, np.float32],\n            out_sig=[np.float32]\
      \ \n        )\n        self.message_port_register_out(pmt.intern(\"delay_msg\"\
      ))\n\n    def work(self, input_items, output_items):\n        \"\"\"example:\
      \ multiply with constant\"\"\"\n       \tmain_stream = input_items[0]\n    \
      \    delay_stream = input_items[1]\n        \n        #when you multiply the\
      \ arrays, one \"rotates\"\n        correlation = np.correlate(main_stream, delay_stream,\
      \ mode='full')\n        u_index = np.argmax(correlation)\n        \n       \
      \ delay = u_index - (len(delay_stream) - 1)\n        # bug fix ----- random\
      \ source samples na 2k, nakolko sa rozdeluju na dva prudy moze\n        # blbnut\n\
      \        msg = pmt.cons(pmt.PMT_NIL, pmt.from_long(delay))\n        self.message_port_pub(pmt.intern(\"\
      delay_msg\"), msg)\n        \n        print(\"delay value:\", delay)\n\t\n \
      \       output_items[0][:] = np.full_like(output_items[0], delay)\n        return\
      \ len(output_items[0])\n        \n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Custom Difference Block', 'blk', [], [('0', 'float', 1), ('1', 'float',
      1)], [('0', 'float', 1), ('delay_msg', 'message', 1)], 'Embedded Python Block
      example - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 232.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nimport pmt\nfrom gnuradio import gr\n\nclass\
      \ blk(gr.sync_block):\n    \"\"\"Embedded Python Block example - a simple multiply\
      \ const\"\"\"\n\n    def __init__(self):\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Receiver',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32]\n        )\n        \n        self.delay =\
      \ 0\n        self.enabled = False\n        \n        self.message_port_register_in(pmt.intern(\"\
      delay_msg\"))\n        self.set_msg_handler(pmt.intern(\"delay_msg\"), self.handle_msg)\n\
      \        \n        self.message_port_register_in(pmt.intern(\"toggle\"))\n \
      \       self.set_msg_handler(pmt.intern(\"toggle\"), self.handle_toggle)\n\n\
      \    def handle_toggle(self, msg):\n    \n        if pmt.is_pair(msg):\n   \
      \     \tmsg = pmt.cdr(msg)\n        \t\n        self.enabled = not self.enabled\n\
      \        state = \"ON\" if self.enabled else \"OFF\"\n        print(f\"[Receiver]\
      \ Correction toggled {state}\")\n        \n\n    def set_enabled(self, value):\n\
      \        self.enabled = bool(value)\n        print(f\"Correction state: {'ON'\
      \ if self.enabled else 'OFF'}\")\n    \t\n    def handle_msg(self, msg):\n \
      \       if pmt.is_pair(msg):\n            msg = pmt.cdr(msg)\n        if pmt.is_integer(msg):\n\
      \            self.delay = pmt.to_long(msg)\n            print(f\"[Receiver]\
      \ Delay received: {self.delay}\")\n        \n    def work(self, input_items,\
      \ output_items):\n        in0 = input_items[0]\n        out = output_items[0]\n\
      \        noutput = len(out)\n        \n        if not self.enabled:\n      \
      \      out[:] = in0[:noutput].astype(np.uint8)\n            return noutput\n\
      \n        delay = max(min(self.delay, len(in0) - 1), -len(in0) + 1)\n\n    \
      \    if delay >= 0:\n            if len(in0) > delay + noutput:\n          \
      \      out[:] = in0[delay:delay + noutput].astype(np.uint8)\n            else:\n\
      \                out[:] = np.zeros(noutput, dtype=np.uint8)\n        else:\n\
      \            advance = abs(delay)\n            if len(in0) > noutput:\n    \
      \            out[:] = in0[advance:advance + noutput].astype(np.uint8)\n    \
      \        else:\n                out[:] = np.zeros(noutput, dtype=np.uint8)\n\
      \n        return noutput\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Receiver', 'blk', [], [('0', 'float', 1), ('toggle', 'message', 1),
      ('delay_msg', 'message', 1)], [('0', 'float', 1)], 'Embedded Python Block example
      - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 32.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"true before delay"'
    nconnections: '1'
    size: '1000'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Delay
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 212.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"before delayed signal"'
    nconnections: '1'
    size: '200'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 412.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"edited signal"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 20.0]
    rotation: 0
    state: true
- name: toggle
  id: variable_qtgui_msg_push_button
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    msgName: pressed
    relBackgroundColor: default
    relFontColor: default
    type: int
    value: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 396.0]
    rotation: 0
    state: true

connections:
- [analog_random_source_x_0, '0', blocks_delay_0, '0']
- [analog_random_source_x_0, '0', blocks_delay_1, '0']
- [blocks_char_to_float_0, '0', epy_block_0, '0']
- [blocks_char_to_float_1, '0', epy_block_0, '1']
- [blocks_char_to_float_1, '0', epy_block_1, '0']
- [blocks_char_to_float_1, '0', qtgui_time_sink_x_0_0, '0']
- [blocks_delay_0, '0', blocks_char_to_float_1, '0']
- [blocks_delay_1, '0', blocks_char_to_float_0, '0']
- [blocks_throttle_0, '0', qtgui_time_sink_x_0, '0']
- [epy_block_0, '0', blocks_throttle_0, '0']
- [epy_block_0, delay_msg, epy_block_1, delay_msg]
- [epy_block_1, '0', qtgui_time_sink_x_1, '0']
- [toggle, pressed, epy_block_1, toggle]

metadata:
  file_format: 1
